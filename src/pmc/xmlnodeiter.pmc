#include <parrot/parrot.h>
#include <libxml/HTMLparser.h>

#include "common.h"
#include "pmc_xmlnode.h"


BEGIN_PMC_HEADER_PREAMBLE

#include <libxml/tree.h>
PMC *XMLNodeIter_new(PARROT_INTERP, PMC *owner, xmlNodePtr first_node);

END_PMC_HEADER_PREAMBLE


PMC *XMLNodeIter_new(PARROT_INTERP, PMC *owner, xmlNodePtr first_node)
{
    INTVAL type = Parrot_XMLNodeIter_get_vtable_pointer(interp)->base_type;
    PMC *iter = Parrot_pmc_new_init(interp, type, owner);
    VTABLE_set_pointer(interp, iter, first_node);
    return iter;
}


pmclass XMLNodeIter
    extends Iterator
    dynpmc
    group libxml_group
    lib xml2
    auto_attrs {

    ATTR PMC *owner;
    ATTR xmlNodePtr first_node;
    ATTR xmlNodePtr cur_node;

    VTABLE void init_pmc(PMC *pmc) {
        if (PMC_IS_NULL(pmc)) {
            Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
                    "Cannot initialize XMLNodeIter with null PMC");
        }

        SET_ATTR_owner(INTERP, SELF, pmc);

        PObj_custom_mark_SET(SELF);
    }

    VTABLE void mark() {
        PMC *owner;
        GET_ATTR_owner(INTERP, SELF, owner);
        Parrot_gc_mark_PMC_alive(INTERP, owner);
    }

    VTABLE void *get_pointer() {
        xmlNodePtr ptr;
        GET_ATTR_first_node(INTERP, SELF, ptr);
        return ptr;
    }

    VTABLE void set_pointer(void *ptr) {
        SET_ATTR_first_node(INTERP, SELF, (xmlNodePtr)ptr);
        SET_ATTR_cur_node(INTERP, SELF, (xmlNodePtr)ptr);
    }

    VTABLE INTVAL get_bool() {
        xmlNodePtr cur_node;
        GET_ATTR_first_node(INTERP, SELF, cur_node);
        return cur_node != NULL;
    }

    VTABLE PMC *shift_pmc() {
        PMC *node_pmc = PMCNULL;
        xmlNodePtr cur_node;
        GET_ATTR_cur_node(INTERP, SELF, cur_node);
        if (cur_node) {
            node_pmc = XMLNode_new(INTERP, cur_node);
            cur_node++;
            SET_ATTR_cur_node(INTERP, SELF, cur_node);
        }
        return node_pmc;
    }

    VTABLE void set_integer_native(INTVAL value) {
        xmlNodePtr first_node;

        if (value != ITERATE_FROM_START) {
            Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
                    "Wrong direction for XMLNodeIter");
        }

        GET_ATTR_first_node(INTERP, SELF, first_node);
        SET_ATTR_cur_node(INTERP, SELF, first_node);
    }
}
	
// vim: expandtab shiftwidth=4 softtabstop=4
