#include <parrot/parrot.h>
#include <libxml/HTMLparser.h>

#include "common.h"
#include "pmc_htmldoc.h"
#include "pmc_htmlparsercontext.h"


#define DATA(self) ((htmlParserCtxtPtr)PMC_data(self))


pmclass HTMLParser
    dynpmc
    group libxml_group
    lib xml2
    auto_attrs {

    VTABLE void init() {
        PMC_data(SELF) = htmlNewParserCtxt();
    }

    VTABLE void destroy() {
        htmlParserCtxtPtr ctxt = DATA(SELF);
        if (ctxt->myDoc) {
            xmlFreeDoc(ctxt->myDoc);
        }
        htmlFreeParserCtxt(ctxt);
    }

    METHOD parse_file(STRING *filename) {
        htmlParserCtxtPtr ctxt = DATA(SELF);
        const char *filename_cstr = Parrot_str_cstring(INTERP, filename);
        htmlDocPtr doc = htmlCtxtReadFile(ctxt, filename_cstr, "utf-8", 1);
        PMC *doc_pmc = HTMLDoc_new(INTERP, doc);
        RETURN(PMC *doc_pmc);
    }

    METHOD parse_string(STRING *string) {
        htmlParserCtxtPtr ctxt = DATA(SELF);
        const char *buffer = Parrot_str_cstring(INTERP, string);
        htmlDocPtr doc = htmlCtxtReadMemory(ctxt, buffer, STRING_length(string), NULL /*URL*/, "utf-8", 1);
        PMC *doc_pmc = HTMLDoc_new(INTERP, doc);
        RETURN(PMC *doc_pmc);
    }
}

// vim: expandtab shiftwidth=4

