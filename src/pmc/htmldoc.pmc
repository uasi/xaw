#include <parrot/parrot.h>
#include <libxml/HTMLparser.h>

#include "pointer.h"
#include "common.h"
#include "pmc_xmldoc.h"
#include "pmc_xmlnodeiter.h"
#include "pmc_xmlnode.h"


BEGIN_PMC_HEADER_PREAMBLE

#include <libxml/HTMLparser.h>
PMC *HTMLDoc_new(PARROT_INTERP, htmlDocPtr doc);

END_PMC_HEADER_PREAMBLE

DEFINE_POINTER_ACCESSOR(htmlDocPtr);


PMC *HTMLDoc_new(PARROT_INTERP, htmlDocPtr doc)
{
    INTVAL type;
    PMC *doc_pmc;

    /* If the doc already have a corresponding HTMLDoc PMC, return it. */
    if (doc->_private) {
        return (PMC *)doc->_private;
    }

    type = Parrot_HTMLDoc_get_vtable_pointer(interp)->base_type;
    doc_pmc = Parrot_pmc_new(interp, type);
    VTABLE_set_pointer(interp, doc_pmc, doc);
    return doc_pmc;
}


pmclass HTMLDoc
    extends XMLDoc
    dynpmc
    group libxml_group
    lib xml2
    auto_attrs {

    VTABLE STRING *get_string() {
        htmlDocPtr ptr = GET_PTR(SELF);
        xmlChar *buffer;
        int length;
        const char *encoding = "utf-8";
        int indent = 1;
        STRING *string;

        xmlDocDumpFormatMemoryEnc(ptr, &buffer, &length, encoding, indent);
        string = Parrot_str_new(INTERP, (char *)buffer, (UINTVAL)length);
        xmlFree(buffer);

        return string;
    }
}

// vim: expandtab shiftwidth=4 softtabstop=4
